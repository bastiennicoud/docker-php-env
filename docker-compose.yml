#
# Docker compose configuration to run php app (like laravel) with transversal capabilities
#

version: '3'

# Docker network to interconnect services
networks:
  backend-lane:

volumes:
  # Volume for mysql database storage
  mysql-db-data:
  # Volume for pgsql database storage
  pgsql-db-data:
  # Redis persistence storage
  redis-db-data:
  # Composer cache
  composer-cache:

services:
  # Base service, nginx webserver that expose the app
  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "${HOST_NGINX_HTTP_PORT}:80"
    volumes:
      - ${BACK_APP_SOURCE_PATH_HOST}:/var/www/app:delegated
      - ${NGINX_SITES_PATH_HOST}:/etc/nginx/sites-available:delegated
    depends_on:
      - php-fpm
    networks:
      - backend-lane

  # Container that runs tht php interpreter with fastcgi
  php-fpm:
    build:
      context: ./php-fpm
    container_name: php-fpm
    ports:
      - "9000:9000"
    volumes:
      - ${BACK_APP_SOURCE_PATH_HOST}:/var/www/app:delegated
    depends_on:
      - ${ACTIVE_DATABASE}
      - redis
    networks:
      - backend-lane

  # Service to run composer in a dedicated container
  composer:
    build:
      context: ./composer
    container_name: composer
    volumes:
      - composer-cache:/tmp
      - ${BACK_APP_SOURCE_PATH_HOST}:/var/www/app
    working_dir: /var/www/app
    user: composer-www-data
    networks:
      - backend-lane
    entrypoint: ['composer', '--ignore-platform-reqs']

  # Service to run artisan commands
  artisan:
    build:
      context: ./php-cli
    container_name: artisan
    volumes:
      - ${BACK_APP_SOURCE_PATH_HOST}:/var/www/app
    depends_on:
      - ${ACTIVE_DATABASE}
    working_dir: /var/www/app
    user: www-php-cli
    networks:
      - backend-lane
    entrypoint: ['php', '/var/www/app/artisan']

  # MySQL database
  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "${HOST_MYSQL_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - SERVICE_TAGS= dev
      - SERVICE_NAME= mysql
      - TZ=${APP_TIMEZONE}
    volumes:
      - mysql-db-data:/var/lib/mysql
    networks:
      - backend-lane

  # PostgreSQL database
  pgsql:
    image: postgres:13-alpine
    container_name: pgsql
    ports:
      - "${HOST_PGSQL_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - pgsql-db-data:/var/lib/postgresql/data
    networks:
      - backend-lane

  # Redis database
  redis:
    image: redis:6.0-alpine
    command: redis-server
    volumes:
      - redis-db-data:/data
    ports:
      - ${HOST_REDIS_PORT}:6379
    networks:
      - backend-lane
